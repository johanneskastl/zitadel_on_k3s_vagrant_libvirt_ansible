---

- name: 'Install Zitadel'
  hosts: 'k3s1'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the zitadel namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        name: 'zitadel'
        api_version: 'v1'
        kind: 'Namespace'
        state: 'present'

    - name: 'Install Zitadel via the helm chart'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_repo_url: https://charts.zitadel.com
        chart_ref: zitadel
        release_name: zitadel
        release_namespace: zitadel
        release_values:
          zitadel:
            masterkey: x123456789012345678901234567891y
            configmapConfig:
              ExternalSecure: false
              ExternalDomain: "zitadel.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
              #ExternalDomain: 127.0.0.1.sslip.io
              ExternalPort: 80
              TLS:
                Enabled: false
              Database:
                Postgres:
                  Host: db-postgresql.postgresql
                  Port: 5432
                  Database: zitadel
                  MaxOpenConns: 20
                  MaxIdleConns: 10
                  MaxConnLifetime: 30m
                  MaxConnIdleTime: 5m
                  User:
                    Username: postgres
                    SSL:
                      Mode: disable
                  Admin:
                    Username: postgres
                    SSL:
                      Mode: disable
          replicaCount: 1
          ingress:
            enabled: true
            className: "traefik"
            hosts:
              - host: "zitadel.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
                paths:
                  - path: /
                    pathType: Prefix

    - name: 'Wait until all pods are running'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: zitadel
      register: pod_list
      until: |
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
      retries: 12
      delay: 10

    - name: 'Wait until the Zitadel URL is reachable'
      ansible.builtin.uri:
        url: "http://zitadel.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 200"
      retries: 11
      delay: 10

    - name: 'Zitadel URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "Connect to the following URL in your browser: http://zitadel.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'Zitadel Admin credentials'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "Admin credentials: zitadel-admin@zitadel.zitadel.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io with password 'Password1!'"
